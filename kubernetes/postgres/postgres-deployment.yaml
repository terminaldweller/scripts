apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:14.2-alpine3.15
        ports:
          - containerPort: 5432
        env:
          # - name: POSTGRES_USER
          #   valueFrom:
          #     secretKeyRef:
          #       name: postgres-secrets
          #       key: postgres-user
          #       optional: false
          # - name: POSTGRES_DB
          #   valueFrom:
          #     secretKeyRef:
          #       name: postgres-secrets
          #       key: postgres-db
          #       optional: false
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgres-secrets
                key: postgres-password
                optional: false
          # - name: POSTGRES_INITDB_ARGS
          #   valueFrom:
          #     secretKeyRef:
          #       name: postgres-secrets
          #       key: postgres-initdb-args
          #       optional: false
          - name: POSTGRES_HOST_AUTH_METHOD
            valueFrom:
              secretKeyRef:
                name: postgres-secrets
                key: postgres-host-auth-method
                optional: false
        volumeMounts:
          - name: postgres-data
            mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-data
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  selector:
    app: postgres
  type: LoadBalancer
  ports:
    - protocol: TCP
      name: "5432"
      port: 5432
      targetPort: 5432
      nodePort: 30432
